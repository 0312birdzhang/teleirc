var config = {};
module.exports = config;

/////////////////////
//  General config //
/////////////////////

// paste the bot API token you got from BotFather here:
config.tg_bot_token = 'YOUR-BOT-TOKEN';

//////////////////
//  IRC config  //
//////////////////

config.irc_nick = 'tgBot';
config.irc_server = 'irc.cs.hut.fi';

config.channels = [
    // example of a barebones IRC channel:
    // '#channel1' will be bridged to a Telegram group called 'Tg_Chat_1'
    {
        irc_channel: '#channel1',
        tg_chat: 'Tg_Chat_1'
    },

    // example of a password-protected IRC channel:
    {
        irc_channel: '#channel2',
        tg_chat: 'Tg_Chat_2',
        password: 'passwd'
    },

    // example of an IRC channel with an alias:
    // channel name will be displayed as '!channel3' instead of '!XXXXXchannel3'
    {
        irc_channel: '!XXXXXchannel3',
        channel_alias: '!channel3',
        tg_chat: 'Tg_Chat_3',
        password: 'passwd'
    }
]

// see https://node-irc.readthedocs.org/en/latest/API.html#client for
// documentation
config.irc_options = {
    userName: 'bot',
    realName: 'Telegram IRC Bot',
    port: 6667,
    localAddress: null,
    debug: false,
    showErrors: false,
    autoRejoin: false,
    autoConnect: true,
    channels: [], // auto generated, do not touch
    secure: false,
    selfSigned: false,
    certExpired: false,
    floodProtection: false,
    floodProtectionDelay: 1000,
    sasl: false,
    stripColors: false,
    channelPrefixes: "&#!",
    messageSplit: 512,
    encoding: ''
};

// if you wish to relay every irc message to telegram, set this to true.
// if false, then only lines matching irc_hilight_re will be relayed
config.irc_relay_all = false;

// the default hilight regexp will match lines containing the bot nick, or
// lines starting with '! '
var regex = '^ *(?:' + config.irc_nick + '[:,]?|!) +(.*\\S.*)$';
config.irc_hilight_re = new RegExp(regex, 'i');
